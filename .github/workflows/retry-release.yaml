---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Retry Release

on:
  schedule:
    - cron: "30 5 * * *"
  workflow_dispatch:

jobs:
  repository:
    name: Get Repository Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.repository.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Output
        id: repository
        run: echo "apps=$(yq eval-all --indent 0 --output-format json '[.]' apps/*/metadata.yaml)" >> $GITHUB_OUTPUT

  retry:
    if: ${{ needs.repository.outputs.apps != '[]' }}
    name: Retry Release
    runs-on: ubuntu-latest
    needs: repository
    strategy:
      matrix:
        apps: ${{ fromJSON(needs.repository.outputs.apps) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Install regctl
        uses: regclient/actions/regctl-installer@main

      - name: Registry Version
        id: registry
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          if ! version=$(regctl image inspect ghcr.io/${{ github.repository_owner }}/${{ matrix.apps.name }}:rolling \
              | jq --raw-output '.config.Labels["org.opencontainers.image.version"]' 2>/dev/null) || [[ -z "${version}" ]];
          then
              echo "Failed to get registry version for ${{ matrix.apps.name }}"
              exit 1
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT

      - if: ${{ matrix.apps.version != steps.registry.outputs.version }}
        name: Retry Release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh workflow run release.yaml \
              --repo ${{ github.repository }} \
              -f app=${{ matrix.apps.name }} \
              -f release=true \
              -f test=true
